[metadata]
name = {{ cookiecutter.project_slug }}
description = {{ cookiecutter.project_short_description }}
long_description = file: README.rst
long_description_content_type = text/x-rst
url = 'https://{{ cookiecutter.remote_host }}/{{ cookiecutter.username }}/{{ cookiecutter.project_slug }}'
author = {{ cookiecutter.full_name.replace('\"', '\\\"') }}
author_email = {{ cookiecutter.email }}
{%- set license_classifiers = {
    'MIT license': 'License :: OSI Approved :: MIT License',
    'BSD license': 'License :: OSI Approved :: BSD License',
    'ISC license': 'License :: OSI Approved :: ISC License (ISCL)',
    'Apache Software License 2.0': 'License :: OSI Approved :: Apache Software License',
    'GNU General Public License v3': 'License :: OSI Approved :: GNU General Public License v3 (GPLv3)'
} %}
classifiers =
    Intended Audience :: Developers
{%- if cookiecutter.open_source_license in license_classifiers %}
    {{ license_classifiers[cookiecutter.open_source_license] }}
{%- endif %}
    Natural Language :: English
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: {{ cookiecutter.pyver }}
include_package_data = True


[options]
packages = find:
python_requires = >={{ cookiecutter.pyver }}
package_dir =
    =src
setup_requires =
    setuptools>=30.3.0
    setuptools_scm
install_requires=
    setuptools_scm

zip_safe = True

[options.packages.find]
where = src
exclude =
    tests

[flake8]
ignore = E203, E501, W503
max-line-length = 80
max-complexity = 18
select = B,B9,BLK,C,E,F,I,S,W

[isort]
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
line_length = 88
known_third_party = pkg_resources,pytest,setuptools

[build_sphinx]
all_files = 1
project = {{ cookiecutter.project_slug }}
source-dir = docs/source
build-dir = docs/build

[pytype]
exclude =
    **/*_test.py
    docs/
    tasks.py
inputs = src tests scripts
keep_going = True
jobs = 4
output = .pytype
pythonpath =
    .
python_version = {{ cookiecutter.pyver }}
disable =
    pyi-error
report_errors = True
precise_return = False
protocols = False
strict_import = False

[tool:pytest]
testpaths = tests
addopts = -ra -q --cov {{ cookiecutter.project_slug }} --ignore setup.py
env =
    PYTHONHASHSEED=0

python_functions = *_test, test_*

markers =
    serial: execute test serially (to avoid race conditions)

[coverage:run]
omit =
    setup.py
parallel = true

[pbr]
autodoc_tree_index_modules = True
autodoc_tree_excludes =
    examples*


[tox:tox]
envlist = py36,py37,py38

[tox:testenv]

commands=
    pytest
